{"version":3,"file":"p5.recorder.min.js","sources":["../node_modules/downloadjs/download.js","../src/p5.recorder.js"],"sourcesContent":["//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage\n// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime\n// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs\n// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.\n// v4 adds AMD/UMD, commonJS, and plain browser support\n// v4.1 adds url download capability via solo URL argument (same domain/CORS only)\n// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors\n// https://github.com/rndme/download\n\n(function (root, factory) {\n\tif (typeof define === 'function' && define.amd) {\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine([], factory);\n\t} else if (typeof exports === 'object') {\n\t\t// Node. Does not work with strict CommonJS, but\n\t\t// only CommonJS-like environments that support module.exports,\n\t\t// like Node.\n\t\tmodule.exports = factory();\n\t} else {\n\t\t// Browser globals (root is window)\n\t\troot.download = factory();\n  }\n}(this, function () {\n\n\treturn function download(data, strFileName, strMimeType) {\n\n\t\tvar self = window, // this script is only for browsers anyway...\n\t\t\tdefaultMime = \"application/octet-stream\", // this default mime also triggers iframe downloads\n\t\t\tmimeType = strMimeType || defaultMime,\n\t\t\tpayload = data,\n\t\t\turl = !strFileName && !strMimeType && payload,\n\t\t\tanchor = document.createElement(\"a\"),\n\t\t\ttoString = function(a){return String(a);},\n\t\t\tmyBlob = (self.Blob || self.MozBlob || self.WebKitBlob || toString),\n\t\t\tfileName = strFileName || \"download\",\n\t\t\tblob,\n\t\t\treader;\n\t\t\tmyBlob= myBlob.call ? myBlob.bind(self) : Blob ;\n\t  \n\t\tif(String(this)===\"true\"){ //reverse arguments, allowing download.bind(true, \"text/xml\", \"export.xml\") to act as a callback\n\t\t\tpayload=[payload, mimeType];\n\t\t\tmimeType=payload[0];\n\t\t\tpayload=payload[1];\n\t\t}\n\n\n\t\tif(url && url.length< 2048){ // if no filename and no mime, assume a url was passed as the only argument\n\t\t\tfileName = url.split(\"/\").pop().split(\"?\")[0];\n\t\t\tanchor.href = url; // assign href prop to temp anchor\n\t\t  \tif(anchor.href.indexOf(url) !== -1){ // if the browser determines that it's a potentially valid url path:\n        \t\tvar ajax=new XMLHttpRequest();\n        \t\tajax.open( \"GET\", url, true);\n        \t\tajax.responseType = 'blob';\n        \t\tajax.onload= function(e){ \n\t\t\t\t  download(e.target.response, fileName, defaultMime);\n\t\t\t\t};\n        \t\tsetTimeout(function(){ ajax.send();}, 0); // allows setting custom ajax headers using the return:\n\t\t\t    return ajax;\n\t\t\t} // end if valid url?\n\t\t} // end if url?\n\n\n\t\t//go ahead and download dataURLs right away\n\t\tif(/^data:([\\w+-]+\\/[\\w+.-]+)?[,;]/.test(payload)){\n\t\t\n\t\t\tif(payload.length > (1024*1024*1.999) && myBlob !== toString ){\n\t\t\t\tpayload=dataUrlToBlob(payload);\n\t\t\t\tmimeType=payload.type || defaultMime;\n\t\t\t}else{\t\t\t\n\t\t\t\treturn navigator.msSaveBlob ?  // IE10 can't do a[download], only Blobs:\n\t\t\t\t\tnavigator.msSaveBlob(dataUrlToBlob(payload), fileName) :\n\t\t\t\t\tsaver(payload) ; // everyone else can save dataURLs un-processed\n\t\t\t}\n\t\t\t\n\t\t}else{//not data url, is it a string with special needs?\n\t\t\tif(/([\\x80-\\xff])/.test(payload)){\t\t\t  \n\t\t\t\tvar i=0, tempUiArr= new Uint8Array(payload.length), mx=tempUiArr.length;\n\t\t\t\tfor(i;i<mx;++i) tempUiArr[i]= payload.charCodeAt(i);\n\t\t\t \tpayload=new myBlob([tempUiArr], {type: mimeType});\n\t\t\t}\t\t  \n\t\t}\n\t\tblob = payload instanceof myBlob ?\n\t\t\tpayload :\n\t\t\tnew myBlob([payload], {type: mimeType}) ;\n\n\n\t\tfunction dataUrlToBlob(strUrl) {\n\t\t\tvar parts= strUrl.split(/[:;,]/),\n\t\t\ttype= parts[1],\n\t\t\tdecoder= parts[2] == \"base64\" ? atob : decodeURIComponent,\n\t\t\tbinData= decoder( parts.pop() ),\n\t\t\tmx= binData.length,\n\t\t\ti= 0,\n\t\t\tuiArr= new Uint8Array(mx);\n\n\t\t\tfor(i;i<mx;++i) uiArr[i]= binData.charCodeAt(i);\n\n\t\t\treturn new myBlob([uiArr], {type: type});\n\t\t }\n\n\t\tfunction saver(url, winMode){\n\n\t\t\tif ('download' in anchor) { //html5 A[download]\n\t\t\t\tanchor.href = url;\n\t\t\t\tanchor.setAttribute(\"download\", fileName);\n\t\t\t\tanchor.className = \"download-js-link\";\n\t\t\t\tanchor.innerHTML = \"downloading...\";\n\t\t\t\tanchor.style.display = \"none\";\n\t\t\t\tdocument.body.appendChild(anchor);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tanchor.click();\n\t\t\t\t\tdocument.body.removeChild(anchor);\n\t\t\t\t\tif(winMode===true){setTimeout(function(){ self.URL.revokeObjectURL(anchor.href);}, 250 );}\n\t\t\t\t}, 66);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// handle non-a[download] safari as best we can:\n\t\t\tif(/(Version)\\/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari\\//.test(navigator.userAgent)) {\n\t\t\t\tif(/^data:/.test(url))\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t\tif(!window.open(url)){ // popup blocked, offer direct download:\n\t\t\t\t\tif(confirm(\"Displaying New Document\\n\\nUse Save As... to download, then click back to return to this page.\")){ location.href=url; }\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t//do iframe dataURL download (old ch+FF):\n\t\t\tvar f = document.createElement(\"iframe\");\n\t\t\tdocument.body.appendChild(f);\n\n\t\t\tif(!winMode && /^data:/.test(url)){ // force a mime that will download:\n\t\t\t\turl=\"data:\"+url.replace(/^data:([\\w\\/\\-\\+]+)/, defaultMime);\n\t\t\t}\n\t\t\tf.src=url;\n\t\t\tsetTimeout(function(){ document.body.removeChild(f); }, 333);\n\n\t\t}//end saver\n\n\n\n\n\t\tif (navigator.msSaveBlob) { // IE10+ : (has Blob, but not a[download] or URL)\n\t\t\treturn navigator.msSaveBlob(blob, fileName);\n\t\t}\n\n\t\tif(self.URL){ // simple fast and modern way using Blob and URL:\n\t\t\tsaver(self.URL.createObjectURL(blob), true);\n\t\t}else{\n\t\t\t// handle non-Blob()+non-URL browsers:\n\t\t\tif(typeof blob === \"string\" || blob.constructor===toString ){\n\t\t\t\ttry{\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \";base64,\"  +  self.btoa(blob)  );\n\t\t\t\t}catch(y){\n\t\t\t\t\treturn saver( \"data:\" +  mimeType   + \",\" + encodeURIComponent(blob)  );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Blob but not URL support:\n\t\t\treader=new FileReader();\n\t\t\treader.onload=function(e){\n\t\t\t\tsaver(this.result);\n\t\t\t};\n\t\t\treader.readAsDataURL(blob);\n\t\t}\n\t\treturn true;\n\t}; /* end download() */\n}));\n","const downloadjs = require(\"downloadjs\");\r\n\r\nexport default class Recorder {\r\n  #chunks = [];\r\n  #recorder;\r\n  #saveAfterStop = true;\r\n  #audioStreamTab;\r\n  #defaultRecordingOptions = {\r\n    filename: \"p5.recorder.canvas.webm\",\r\n    recordAudio: true,\r\n    audioBitRate: 128000,\r\n    videoBitRate: 120000000,\r\n    fps: 60,\r\n  };\r\n  #currentRecordingOptions = {\r\n    canvas: undefined,\r\n    filename: undefined,\r\n    recordAudio: undefined,\r\n    audioBitRate: undefined,\r\n    videoBitRate: undefined,\r\n    fps: undefined,\r\n    mimeType: undefined,\r\n  };\r\n  #timer = {\r\n    start: undefined,\r\n    end: undefined,\r\n  };\r\n  #progress = 0;\r\n\r\n  constructor(saveAfterStop = true) {\r\n    this.#saveAfterStop = saveAfterStop;\r\n  }\r\n\r\n  get #currentBlob() {\r\n    return new Blob(this.#chunks);\r\n  }\r\n\r\n  async start(options) {\r\n    this.#mergeUserOptions(options);\r\n    let stream = await this.#resolveStream();\r\n    this.#createRecorder(stream);\r\n    this.#recorder.start();\r\n  }\r\n\r\n  #mergeUserOptions(userOptions) {\r\n    this.#currentRecordingOptions = {\r\n      canvas: document.querySelector(\"canvas\"),\r\n      ...this.#defaultRecordingOptions,\r\n      ...userOptions,\r\n      mimeType: \"video/webm\",\r\n    };\r\n  }\r\n\r\n  async #resolveStream() {\r\n    let tracks = [];\r\n    const { canvas, fps, recordAudio } = this.#currentRecordingOptions;\r\n    //video track from canvas stream\r\n    let videoStream = canvas.captureStream(fps);\r\n    tracks.push(videoStream.getVideoTracks()[0]);\r\n\r\n    /**\r\n     * tracking here https://github.com/processing/p5.js-sound/issues/457\r\n     * the possibility to not use navigator.mediaDevices.getDisplayMedia API\r\n     */\r\n    if (recordAudio) {\r\n      //seems we can record using the same stream after user click for stop sharing.\r\n      if (!this.#audioStreamTab || !this.#audioStreamTab.active)\r\n        this.#audioStreamTab = await navigator.mediaDevices.getDisplayMedia({\r\n          audio: true,\r\n          video: true,\r\n        });\r\n      let audioTracks = this.#audioStreamTab.getAudioTracks();\r\n      audioTracks.forEach((track) => tracks.push(track));\r\n    }\r\n\r\n    //combine video and audiotracks\r\n    let combinedStream = new MediaStream(tracks);\r\n    return combinedStream;\r\n  }\r\n\r\n  #createRecorder(stream) {\r\n    this.#recorder = new MediaRecorder(stream, this.currentRecordingOptions);\r\n    this.#recorder.onstop = this.#onMediaRecorderStop.bind(this);\r\n    this.#recorder.onstart = this.#onMediaRecorderStart.bind(this);\r\n    this.#recorder.ondataavailable = this.#onDataAvailable.bind(this);\r\n    this.#recorder.onstop = this.#onMediaRecorderStop.bind(this);\r\n    this.#recorder.onerror = (e) => console.log(e);\r\n    return this.#recorder;\r\n  }\r\n\r\n  #onDataAvailable(e) {\r\n    if (e.data.size) {\r\n      this.#chunks.push(e.data);\r\n    }\r\n  }\r\n\r\n  #onMediaRecorderStart() {\r\n    this.#timer = {\r\n      start: new Date(),\r\n      end: undefined,\r\n    };\r\n    this.#progress = 0;\r\n    this.#chunks = [];\r\n    this.#chunks.length = 0;\r\n  }\r\n\r\n  #onMediaRecorderStop() {\r\n    this.#timer.end = new Date();\r\n    this.#progress = 100;\r\n    if (this.#saveAfterStop) this.download();\r\n  }\r\n\r\n  download() {\r\n    downloadjs(\r\n      this.#currentBlob,\r\n      this.#currentRecordingOptions.filename,\r\n      this.#currentRecordingOptions.mimeType\r\n    );\r\n  }\r\n\r\n  stop() {\r\n    this.#recorder.stop();\r\n  }\r\n\r\n  get #webMRecordedTime() {\r\n    let date = this.#timer?.end?.getTime() || new Date().getTime();\r\n    return date - this.#timer?.start?.getTime() || undefined;\r\n  }\r\n\r\n  get #webMtotalRecordedFrames() {\r\n    return (this.#webMRecordedTime * this.#currentRecordingOptions.fps) / 1000 || 0;\r\n  }\r\n\r\n  /**\r\n   * we can play with transcoding state, mixing mediaRecoder + transcoding when user ask for transcoding\r\n   * makes more sense use the progress to transcoding only\r\n   *\r\n   * contains current status\r\n   * status: {\r\n   *   frames: 0,\r\n   *   progress: 0,\r\n   *   state: undefined,\r\n   *   time: undefined,\r\n   * }\r\n   */\r\n  get status() {\r\n    return {\r\n      state: this.#recorder?.state,\r\n      time: this.#webMRecordedTime,\r\n      frames: this.#webMtotalRecordedFrames,\r\n      progress: this.#progress,\r\n    };\r\n  }\r\n}\r\n"],"names":["module","download","data","strFileName","strMimeType","blob","reader","self","window","defaultMime","mimeType","payload","url","anchor","document","createElement","toString","a","String","myBlob","Blob","MozBlob","WebKitBlob","fileName","call","bind","this","length","split","pop","href","indexOf","ajax","XMLHttpRequest","open","responseType","onload","e","target","response","setTimeout","send","test","navigator","msSaveBlob","dataUrlToBlob","saver","type","i","tempUiArr","Uint8Array","mx","charCodeAt","strUrl","parts","binData","atob","decodeURIComponent","uiArr","winMode","setAttribute","className","innerHTML","style","display","body","appendChild","click","removeChild","URL","revokeObjectURL","userAgent","replace","confirm","location","f","src","createObjectURL","constructor","btoa","y","encodeURIComponent","FileReader","result","readAsDataURL","userOptions","canvas","querySelector","tracks","fps","recordAudio","videoStream","captureStream","push","getVideoTracks","_classPrivateFieldGet","active","_classPrivateFieldSet","mediaDevices","getDisplayMedia","audio","video","getAudioTracks","forEach","track","MediaStream","stream","MediaRecorder","currentRecordingOptions","onstop","_classPrivateMethodGet","onstart","ondataavailable","onerror","console","log","size","start","Date","end","undefined","getTime","_classPrivateFieldGet5","_classPrivateFieldGet6","saveAfterStop","filename","audioBitRate","videoBitRate","options","_this","downloadjs","stop","state","_classPrivateFieldGet2","time","frames","progress"],"mappings":"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"}